// Code generated by protoc-gen-go. DO NOT EDIT.
// source: currencies.proto

package currencies

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetRateCurrentCommonRequest struct {
	//@inject_tag: validate:"required,alpha,len=3"
	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty" validate:"required,alpha,len=3"`
	//@inject_tag: validate:"required,alpha,len=3"
	To string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty" validate:"required,alpha,len=3"`
	//@inject_tag: validate:"required,oneof=oxr paysuper centralbank stock cardpay"
	RateType             string   `protobuf:"bytes,3,opt,name=rate_type,json=rateType,proto3" json:"rate_type,omitempty" validate:"required,oneof=oxr paysuper centralbank stock cardpay"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *GetRateCurrentCommonRequest) Reset()         { *m = GetRateCurrentCommonRequest{} }
func (m *GetRateCurrentCommonRequest) String() string { return proto.CompactTextString(m) }
func (*GetRateCurrentCommonRequest) ProtoMessage()    {}
func (*GetRateCurrentCommonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1988b70e90d5a630, []int{0}
}

func (m *GetRateCurrentCommonRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRateCurrentCommonRequest.Unmarshal(m, b)
}
func (m *GetRateCurrentCommonRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRateCurrentCommonRequest.Marshal(b, m, deterministic)
}
func (m *GetRateCurrentCommonRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRateCurrentCommonRequest.Merge(m, src)
}
func (m *GetRateCurrentCommonRequest) XXX_Size() int {
	return xxx_messageInfo_GetRateCurrentCommonRequest.Size(m)
}
func (m *GetRateCurrentCommonRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRateCurrentCommonRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRateCurrentCommonRequest proto.InternalMessageInfo

func (m *GetRateCurrentCommonRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *GetRateCurrentCommonRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *GetRateCurrentCommonRequest) GetRateType() string {
	if m != nil {
		return m.RateType
	}
	return ""
}

type GetRateByDateCommonRequest struct {
	//@inject_tag: validate:"required,alpha,len=3"
	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty" validate:"required,alpha,len=3"`
	//@inject_tag: validate:"required,alpha,len=3"
	To string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty" validate:"required,alpha,len=3"`
	//@inject_tag: validate:"required,oneof=oxr paysuper centralbank stock cardpay"
	RateType string `protobuf:"bytes,3,opt,name=rate_type,json=rateType,proto3" json:"rate_type,omitempty" validate:"required,oneof=oxr paysuper centralbank stock cardpay"`
	//@inject_tag: validate:"required"
	Datetime             *timestamp.Timestamp `protobuf:"bytes,4,opt,name=datetime,proto3" json:"datetime,omitempty" validate:"required"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *GetRateByDateCommonRequest) Reset()         { *m = GetRateByDateCommonRequest{} }
func (m *GetRateByDateCommonRequest) String() string { return proto.CompactTextString(m) }
func (*GetRateByDateCommonRequest) ProtoMessage()    {}
func (*GetRateByDateCommonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1988b70e90d5a630, []int{1}
}

func (m *GetRateByDateCommonRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRateByDateCommonRequest.Unmarshal(m, b)
}
func (m *GetRateByDateCommonRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRateByDateCommonRequest.Marshal(b, m, deterministic)
}
func (m *GetRateByDateCommonRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRateByDateCommonRequest.Merge(m, src)
}
func (m *GetRateByDateCommonRequest) XXX_Size() int {
	return xxx_messageInfo_GetRateByDateCommonRequest.Size(m)
}
func (m *GetRateByDateCommonRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRateByDateCommonRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRateByDateCommonRequest proto.InternalMessageInfo

func (m *GetRateByDateCommonRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *GetRateByDateCommonRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *GetRateByDateCommonRequest) GetRateType() string {
	if m != nil {
		return m.RateType
	}
	return ""
}

func (m *GetRateByDateCommonRequest) GetDatetime() *timestamp.Timestamp {
	if m != nil {
		return m.Datetime
	}
	return nil
}

type GetRateCurrentForMerchantRequest struct {
	//@inject_tag: validate:"required,alpha,len=3"
	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty" validate:"required,alpha,len=3"`
	//@inject_tag: validate:"required,alpha,len=3"
	To string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty" validate:"required,alpha,len=3"`
	//@inject_tag: validate:"required,oneof=oxr paysuper centralbank stock cardpay"
	RateType string `protobuf:"bytes,3,opt,name=rate_type,json=rateType,proto3" json:"rate_type,omitempty" validate:"required,oneof=oxr paysuper centralbank stock cardpay"`
	//@inject_tag: validate:"omitempty,hexadecimal,len=24"
	MerchantId           string   `protobuf:"bytes,4,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty" validate:"omitempty,hexadecimal,len=24"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *GetRateCurrentForMerchantRequest) Reset()         { *m = GetRateCurrentForMerchantRequest{} }
func (m *GetRateCurrentForMerchantRequest) String() string { return proto.CompactTextString(m) }
func (*GetRateCurrentForMerchantRequest) ProtoMessage()    {}
func (*GetRateCurrentForMerchantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1988b70e90d5a630, []int{2}
}

func (m *GetRateCurrentForMerchantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRateCurrentForMerchantRequest.Unmarshal(m, b)
}
func (m *GetRateCurrentForMerchantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRateCurrentForMerchantRequest.Marshal(b, m, deterministic)
}
func (m *GetRateCurrentForMerchantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRateCurrentForMerchantRequest.Merge(m, src)
}
func (m *GetRateCurrentForMerchantRequest) XXX_Size() int {
	return xxx_messageInfo_GetRateCurrentForMerchantRequest.Size(m)
}
func (m *GetRateCurrentForMerchantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRateCurrentForMerchantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRateCurrentForMerchantRequest proto.InternalMessageInfo

func (m *GetRateCurrentForMerchantRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *GetRateCurrentForMerchantRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *GetRateCurrentForMerchantRequest) GetRateType() string {
	if m != nil {
		return m.RateType
	}
	return ""
}

func (m *GetRateCurrentForMerchantRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

type GetRateByDateForMerchantRequest struct {
	//@inject_tag: validate:"required,alpha,len=3"
	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty" validate:"required,alpha,len=3"`
	//@inject_tag: validate:"required,alpha,len=3"
	To string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty" validate:"required,alpha,len=3"`
	//@inject_tag: validate:"required,oneof=oxr paysuper centralbank stock cardpay"
	RateType string `protobuf:"bytes,3,opt,name=rate_type,json=rateType,proto3" json:"rate_type,omitempty" validate:"required,oneof=oxr paysuper centralbank stock cardpay"`
	//@inject_tag: validate:"required"
	Datetime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=datetime,proto3" json:"datetime,omitempty" validate:"required"`
	//@inject_tag: validate:"omitempty,hexadecimal,len=24"
	MerchantId           string   `protobuf:"bytes,5,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty" validate:"omitempty,hexadecimal,len=24"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *GetRateByDateForMerchantRequest) Reset()         { *m = GetRateByDateForMerchantRequest{} }
func (m *GetRateByDateForMerchantRequest) String() string { return proto.CompactTextString(m) }
func (*GetRateByDateForMerchantRequest) ProtoMessage()    {}
func (*GetRateByDateForMerchantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1988b70e90d5a630, []int{3}
}

func (m *GetRateByDateForMerchantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRateByDateForMerchantRequest.Unmarshal(m, b)
}
func (m *GetRateByDateForMerchantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRateByDateForMerchantRequest.Marshal(b, m, deterministic)
}
func (m *GetRateByDateForMerchantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRateByDateForMerchantRequest.Merge(m, src)
}
func (m *GetRateByDateForMerchantRequest) XXX_Size() int {
	return xxx_messageInfo_GetRateByDateForMerchantRequest.Size(m)
}
func (m *GetRateByDateForMerchantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRateByDateForMerchantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRateByDateForMerchantRequest proto.InternalMessageInfo

func (m *GetRateByDateForMerchantRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *GetRateByDateForMerchantRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *GetRateByDateForMerchantRequest) GetRateType() string {
	if m != nil {
		return m.RateType
	}
	return ""
}

func (m *GetRateByDateForMerchantRequest) GetDatetime() *timestamp.Timestamp {
	if m != nil {
		return m.Datetime
	}
	return nil
}

func (m *GetRateByDateForMerchantRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

type RateData struct {
	//@inject_tag: validate:"required,hexadecimal,len=24" json:"id" bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" validate:"required,hexadecimal,len=24" bson:"_id"`
	//@inject_tag: validate:"required" json:"created_at" bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at" validate:"required" bson:"created_at"`
	//@inject_tag: validate:"required,alpha,len=6" json:"pair" bson:"pair"
	Pair string `protobuf:"bytes,3,opt,name=pair,proto3" json:"pair" validate:"required,alpha,len=6" bson:"pair"`
	//@inject_tag: validate:"required,numeric,gt=0" json:"rate" bson:"rate"
	Rate float64 `protobuf:"fixed64,4,opt,name=rate,proto3" json:"rate" validate:"required,numeric,gt=0" bson:"rate"`
	//@inject_tag: validate:"required,alpha" json:"source" bson:"source"
	Source string `protobuf:"bytes,5,opt,name=source,proto3" json:"source" validate:"required,alpha" bson:"source"`
	//@inject_tag: validate:"numeric" json:"volume" bson:"volume"
	Volume               float64  `protobuf:"fixed64,6,opt,name=volume,proto3" json:"volume" validate:"numeric" bson:"volume"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *RateData) Reset()         { *m = RateData{} }
func (m *RateData) String() string { return proto.CompactTextString(m) }
func (*RateData) ProtoMessage()    {}
func (*RateData) Descriptor() ([]byte, []int) {
	return fileDescriptor_1988b70e90d5a630, []int{4}
}

func (m *RateData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RateData.Unmarshal(m, b)
}
func (m *RateData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RateData.Marshal(b, m, deterministic)
}
func (m *RateData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RateData.Merge(m, src)
}
func (m *RateData) XXX_Size() int {
	return xxx_messageInfo_RateData.Size(m)
}
func (m *RateData) XXX_DiscardUnknown() {
	xxx_messageInfo_RateData.DiscardUnknown(m)
}

var xxx_messageInfo_RateData proto.InternalMessageInfo

func (m *RateData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RateData) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *RateData) GetPair() string {
	if m != nil {
		return m.Pair
	}
	return ""
}

func (m *RateData) GetRate() float64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *RateData) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *RateData) GetVolume() float64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

type CardpayRate struct {
	//@inject_tag: validate:"required" json:"created_at" bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at" validate:"required" bson:"created_at"`
	//@inject_tag: validate:"required,alpha,len=3" json:"from" bson:"from"
	From string `protobuf:"bytes,2,opt,name=from,proto3" json:"from" validate:"required,alpha,len=3" bson:"from"`
	//@inject_tag: validate:"required,alpha,len=3" json:"to" bson:"to"
	To string `protobuf:"bytes,3,opt,name=to,proto3" json:"to" validate:"required,alpha,len=3" bson:"to"`
	//@inject_tag: validate:"required,numeric,gt=0" json:"rate" bson:"rate"
	Rate float64 `protobuf:"fixed64,4,opt,name=rate,proto3" json:"rate" validate:"required,numeric,gt=0" bson:"rate"`
	//@inject_tag: validate:"required,alpha" json:"source" bson:"source"
	Source string `protobuf:"bytes,5,opt,name=source,proto3" json:"source" validate:"required,alpha" bson:"source"`
	//@inject_tag: validate:"numeric" json:"volume" bson:"volume"
	Volume               float64  `protobuf:"fixed64,6,opt,name=volume,proto3" json:"volume" validate:"numeric" bson:"volume"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *CardpayRate) Reset()         { *m = CardpayRate{} }
func (m *CardpayRate) String() string { return proto.CompactTextString(m) }
func (*CardpayRate) ProtoMessage()    {}
func (*CardpayRate) Descriptor() ([]byte, []int) {
	return fileDescriptor_1988b70e90d5a630, []int{5}
}

func (m *CardpayRate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardpayRate.Unmarshal(m, b)
}
func (m *CardpayRate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardpayRate.Marshal(b, m, deterministic)
}
func (m *CardpayRate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardpayRate.Merge(m, src)
}
func (m *CardpayRate) XXX_Size() int {
	return xxx_messageInfo_CardpayRate.Size(m)
}
func (m *CardpayRate) XXX_DiscardUnknown() {
	xxx_messageInfo_CardpayRate.DiscardUnknown(m)
}

var xxx_messageInfo_CardpayRate proto.InternalMessageInfo

func (m *CardpayRate) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *CardpayRate) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *CardpayRate) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *CardpayRate) GetRate() float64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *CardpayRate) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *CardpayRate) GetVolume() float64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

type EmptyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *EmptyResponse) Reset()         { *m = EmptyResponse{} }
func (m *EmptyResponse) String() string { return proto.CompactTextString(m) }
func (*EmptyResponse) ProtoMessage()    {}
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1988b70e90d5a630, []int{6}
}

func (m *EmptyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyResponse.Unmarshal(m, b)
}
func (m *EmptyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyResponse.Marshal(b, m, deterministic)
}
func (m *EmptyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyResponse.Merge(m, src)
}
func (m *EmptyResponse) XXX_Size() int {
	return xxx_messageInfo_EmptyResponse.Size(m)
}
func (m *EmptyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyResponse proto.InternalMessageInfo

type EmptyRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *EmptyRequest) Reset()         { *m = EmptyRequest{} }
func (m *EmptyRequest) String() string { return proto.CompactTextString(m) }
func (*EmptyRequest) ProtoMessage()    {}
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1988b70e90d5a630, []int{7}
}

func (m *EmptyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyRequest.Unmarshal(m, b)
}
func (m *EmptyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyRequest.Marshal(b, m, deterministic)
}
func (m *EmptyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyRequest.Merge(m, src)
}
func (m *EmptyRequest) XXX_Size() int {
	return xxx_messageInfo_EmptyRequest.Size(m)
}
func (m *EmptyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyRequest proto.InternalMessageInfo

type CorrectionCorridor struct {
	//@inject_tag: validate:"required,numeric,gte=0,lte=1"
	Value                float64  `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty" validate:"required,numeric,gte=0,lte=1"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *CorrectionCorridor) Reset()         { *m = CorrectionCorridor{} }
func (m *CorrectionCorridor) String() string { return proto.CompactTextString(m) }
func (*CorrectionCorridor) ProtoMessage()    {}
func (*CorrectionCorridor) Descriptor() ([]byte, []int) {
	return fileDescriptor_1988b70e90d5a630, []int{8}
}

func (m *CorrectionCorridor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CorrectionCorridor.Unmarshal(m, b)
}
func (m *CorrectionCorridor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CorrectionCorridor.Marshal(b, m, deterministic)
}
func (m *CorrectionCorridor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CorrectionCorridor.Merge(m, src)
}
func (m *CorrectionCorridor) XXX_Size() int {
	return xxx_messageInfo_CorrectionCorridor.Size(m)
}
func (m *CorrectionCorridor) XXX_DiscardUnknown() {
	xxx_messageInfo_CorrectionCorridor.DiscardUnknown(m)
}

var xxx_messageInfo_CorrectionCorridor proto.InternalMessageInfo

func (m *CorrectionCorridor) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type CorrectionRule struct {
	// @inject_tag: validate:"required,hexadecimal,len=24" json:"id" bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" validate:"required,hexadecimal,len=24" bson:"_id"`
	//@inject_tag: validate:"required,oneof=oxr paysuper centralbanks stock cardpay" json:"rate_type" bson:"rate_type"
	RateType string `protobuf:"bytes,2,opt,name=rate_type,json=rateType,proto3" json:"rate_type" validate:"required,oneof=oxr paysuper centralbanks stock cardpay" bson:"rate_type"`
	// @inject_tag: validate:"omitempty,numeric,gte=-100,lte=100" json:"common_correction" bson:"common_correction"
	CommonCorrection float64 `protobuf:"fixed64,3,opt,name=common_correction,json=commonCorrection,proto3" json:"common_correction" validate:"omitempty,numeric,gte=-100,lte=100" bson:"common_correction"`
	// @inject_tag: validate:"omitempty,dive,keys,alpha,len=6,endkeys,gte=-100,lte=100" json:"pair_correction" bson:"pair_correction"
	PairCorrection map[string]float64 `protobuf:"bytes,4,rep,name=pair_correction,json=pairCorrection,proto3" json:"pair_correction" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3" validate:"omitempty,dive,keys,alpha,len=6,endkeys,gte=-100,lte=100" bson:"pair_correction"`
	// @inject_tag: validate:"required" json:"created_at"  bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at" validate:"required" bson:"created_at"`
	//@inject_tag: validate:"omitempty,hexadecimal,len=24" json:"merchant_id" bson:"merchant_id"
	MerchantId           string   `protobuf:"bytes,6,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id" validate:"omitempty,hexadecimal,len=24" bson:"merchant_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *CorrectionRule) Reset()         { *m = CorrectionRule{} }
func (m *CorrectionRule) String() string { return proto.CompactTextString(m) }
func (*CorrectionRule) ProtoMessage()    {}
func (*CorrectionRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_1988b70e90d5a630, []int{9}
}

func (m *CorrectionRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CorrectionRule.Unmarshal(m, b)
}
func (m *CorrectionRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CorrectionRule.Marshal(b, m, deterministic)
}
func (m *CorrectionRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CorrectionRule.Merge(m, src)
}
func (m *CorrectionRule) XXX_Size() int {
	return xxx_messageInfo_CorrectionRule.Size(m)
}
func (m *CorrectionRule) XXX_DiscardUnknown() {
	xxx_messageInfo_CorrectionRule.DiscardUnknown(m)
}

var xxx_messageInfo_CorrectionRule proto.InternalMessageInfo

func (m *CorrectionRule) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CorrectionRule) GetRateType() string {
	if m != nil {
		return m.RateType
	}
	return ""
}

func (m *CorrectionRule) GetCommonCorrection() float64 {
	if m != nil {
		return m.CommonCorrection
	}
	return 0
}

func (m *CorrectionRule) GetPairCorrection() map[string]float64 {
	if m != nil {
		return m.PairCorrection
	}
	return nil
}

func (m *CorrectionRule) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *CorrectionRule) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

type CommonCorrectionRule struct {
	// @inject_tag: validate:"required,hexadecimal,len=24" json:"id" bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" validate:"required,hexadecimal,len=24" bson:"_id"`
	//@inject_tag: validate:"required,oneof=oxr paysuper centralbanks stock cardpay" json:"rate_type" bson:"rate_type"
	RateType string `protobuf:"bytes,2,opt,name=rate_type,json=rateType,proto3" json:"rate_type" validate:"required,oneof=oxr paysuper centralbanks stock cardpay" bson:"rate_type"`
	// @inject_tag: validate:"omitempty,numeric,gte=-100,lte=100" json:"common_correction" bson:"common_correction"
	CommonCorrection float64 `protobuf:"fixed64,3,opt,name=common_correction,json=commonCorrection,proto3" json:"common_correction" validate:"omitempty,numeric,gte=-100,lte=100" bson:"common_correction"`
	// @inject_tag: validate:"omitempty,dive,keys,alpha,len=6,endkeys,gte=-100,lte=100" json:"pair_correction" bson:"pair_correction"
	PairCorrection map[string]float64 `protobuf:"bytes,4,rep,name=pair_correction,json=pairCorrection,proto3" json:"pair_correction" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3" validate:"omitempty,dive,keys,alpha,len=6,endkeys,gte=-100,lte=100" bson:"pair_correction"`
	// @inject_tag: validate:"required" json:"created_at"  bson:"created_at"
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at" validate:"required" bson:"created_at"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *CommonCorrectionRule) Reset()         { *m = CommonCorrectionRule{} }
func (m *CommonCorrectionRule) String() string { return proto.CompactTextString(m) }
func (*CommonCorrectionRule) ProtoMessage()    {}
func (*CommonCorrectionRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_1988b70e90d5a630, []int{10}
}

func (m *CommonCorrectionRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonCorrectionRule.Unmarshal(m, b)
}
func (m *CommonCorrectionRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonCorrectionRule.Marshal(b, m, deterministic)
}
func (m *CommonCorrectionRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonCorrectionRule.Merge(m, src)
}
func (m *CommonCorrectionRule) XXX_Size() int {
	return xxx_messageInfo_CommonCorrectionRule.Size(m)
}
func (m *CommonCorrectionRule) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonCorrectionRule.DiscardUnknown(m)
}

var xxx_messageInfo_CommonCorrectionRule proto.InternalMessageInfo

func (m *CommonCorrectionRule) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CommonCorrectionRule) GetRateType() string {
	if m != nil {
		return m.RateType
	}
	return ""
}

func (m *CommonCorrectionRule) GetCommonCorrection() float64 {
	if m != nil {
		return m.CommonCorrection
	}
	return 0
}

func (m *CommonCorrectionRule) GetPairCorrection() map[string]float64 {
	if m != nil {
		return m.PairCorrection
	}
	return nil
}

func (m *CommonCorrectionRule) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type CommonCorrectionRuleRequest struct {
	//@inject_tag: validate:"required,oneof=oxr paysuper centralbank stock cardpay"
	RateType             string   `protobuf:"bytes,1,opt,name=rate_type,json=rateType,proto3" json:"rate_type,omitempty" validate:"required,oneof=oxr paysuper centralbank stock cardpay"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *CommonCorrectionRuleRequest) Reset()         { *m = CommonCorrectionRuleRequest{} }
func (m *CommonCorrectionRuleRequest) String() string { return proto.CompactTextString(m) }
func (*CommonCorrectionRuleRequest) ProtoMessage()    {}
func (*CommonCorrectionRuleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1988b70e90d5a630, []int{11}
}

func (m *CommonCorrectionRuleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonCorrectionRuleRequest.Unmarshal(m, b)
}
func (m *CommonCorrectionRuleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonCorrectionRuleRequest.Marshal(b, m, deterministic)
}
func (m *CommonCorrectionRuleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonCorrectionRuleRequest.Merge(m, src)
}
func (m *CommonCorrectionRuleRequest) XXX_Size() int {
	return xxx_messageInfo_CommonCorrectionRuleRequest.Size(m)
}
func (m *CommonCorrectionRuleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonCorrectionRuleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommonCorrectionRuleRequest proto.InternalMessageInfo

func (m *CommonCorrectionRuleRequest) GetRateType() string {
	if m != nil {
		return m.RateType
	}
	return ""
}

type MerchantCorrectionRuleRequest struct {
	//@inject_tag: validate:"required,oneof=oxr paysuper centralbank stock cardpay"
	RateType string `protobuf:"bytes,1,opt,name=rate_type,json=rateType,proto3" json:"rate_type,omitempty" validate:"required,oneof=oxr paysuper centralbank stock cardpay"`
	//@inject_tag: validate:"omitempty,hexadecimal,len=24"
	MerchantId           string   `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty" validate:"omitempty,hexadecimal,len=24"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantCorrectionRuleRequest) Reset()         { *m = MerchantCorrectionRuleRequest{} }
func (m *MerchantCorrectionRuleRequest) String() string { return proto.CompactTextString(m) }
func (*MerchantCorrectionRuleRequest) ProtoMessage()    {}
func (*MerchantCorrectionRuleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1988b70e90d5a630, []int{12}
}

func (m *MerchantCorrectionRuleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantCorrectionRuleRequest.Unmarshal(m, b)
}
func (m *MerchantCorrectionRuleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantCorrectionRuleRequest.Marshal(b, m, deterministic)
}
func (m *MerchantCorrectionRuleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantCorrectionRuleRequest.Merge(m, src)
}
func (m *MerchantCorrectionRuleRequest) XXX_Size() int {
	return xxx_messageInfo_MerchantCorrectionRuleRequest.Size(m)
}
func (m *MerchantCorrectionRuleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantCorrectionRuleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantCorrectionRuleRequest proto.InternalMessageInfo

func (m *MerchantCorrectionRuleRequest) GetRateType() string {
	if m != nil {
		return m.RateType
	}
	return ""
}

func (m *MerchantCorrectionRuleRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

type ExchangeCurrencyCurrentCommonRequest struct {
	//@inject_tag: validate:"required,alpha,len=3"
	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty" validate:"required,alpha,len=3"`
	//@inject_tag: validate:"required,alpha,len=3"
	To string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty" validate:"required,alpha,len=3"`
	//@inject_tag: validate:"required,oneof=oxr paysuper centralbanks stock cardpay"
	RateType string `protobuf:"bytes,3,opt,name=rate_type,json=rateType,proto3" json:"rate_type,omitempty" validate:"required,oneof=oxr paysuper centralbanks stock cardpay"`
	// @inject_tag: validate:"numeric,gte=0"
	Amount               float64  `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty" validate:"numeric,gte=0"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *ExchangeCurrencyCurrentCommonRequest) Reset()         { *m = ExchangeCurrencyCurrentCommonRequest{} }
func (m *ExchangeCurrencyCurrentCommonRequest) String() string { return proto.CompactTextString(m) }
func (*ExchangeCurrencyCurrentCommonRequest) ProtoMessage()    {}
func (*ExchangeCurrencyCurrentCommonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1988b70e90d5a630, []int{13}
}

func (m *ExchangeCurrencyCurrentCommonRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeCurrencyCurrentCommonRequest.Unmarshal(m, b)
}
func (m *ExchangeCurrencyCurrentCommonRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeCurrencyCurrentCommonRequest.Marshal(b, m, deterministic)
}
func (m *ExchangeCurrencyCurrentCommonRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeCurrencyCurrentCommonRequest.Merge(m, src)
}
func (m *ExchangeCurrencyCurrentCommonRequest) XXX_Size() int {
	return xxx_messageInfo_ExchangeCurrencyCurrentCommonRequest.Size(m)
}
func (m *ExchangeCurrencyCurrentCommonRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeCurrencyCurrentCommonRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeCurrencyCurrentCommonRequest proto.InternalMessageInfo

func (m *ExchangeCurrencyCurrentCommonRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *ExchangeCurrencyCurrentCommonRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *ExchangeCurrencyCurrentCommonRequest) GetRateType() string {
	if m != nil {
		return m.RateType
	}
	return ""
}

func (m *ExchangeCurrencyCurrentCommonRequest) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type ExchangeCurrencyCurrentForMerchantRequest struct {
	//@inject_tag: validate:"required,alpha,len=3"
	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty" validate:"required,alpha,len=3"`
	//@inject_tag: validate:"required,alpha,len=3"
	To string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty" validate:"required,alpha,len=3"`
	//@inject_tag: validate:"required,oneof=oxr paysuper centralbanks stock cardpay"
	RateType string `protobuf:"bytes,3,opt,name=rate_type,json=rateType,proto3" json:"rate_type,omitempty" validate:"required,oneof=oxr paysuper centralbanks stock cardpay"`
	// @inject_tag: validate:"numeric,gte=0"
	Amount float64 `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty" validate:"numeric,gte=0"`
	//@inject_tag: validate:"omitempty,hexadecimal,len=24"
	MerchantId           string   `protobuf:"bytes,5,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty" validate:"omitempty,hexadecimal,len=24"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *ExchangeCurrencyCurrentForMerchantRequest) Reset() {
	*m = ExchangeCurrencyCurrentForMerchantRequest{}
}
func (m *ExchangeCurrencyCurrentForMerchantRequest) String() string { return proto.CompactTextString(m) }
func (*ExchangeCurrencyCurrentForMerchantRequest) ProtoMessage()    {}
func (*ExchangeCurrencyCurrentForMerchantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1988b70e90d5a630, []int{14}
}

func (m *ExchangeCurrencyCurrentForMerchantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeCurrencyCurrentForMerchantRequest.Unmarshal(m, b)
}
func (m *ExchangeCurrencyCurrentForMerchantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeCurrencyCurrentForMerchantRequest.Marshal(b, m, deterministic)
}
func (m *ExchangeCurrencyCurrentForMerchantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeCurrencyCurrentForMerchantRequest.Merge(m, src)
}
func (m *ExchangeCurrencyCurrentForMerchantRequest) XXX_Size() int {
	return xxx_messageInfo_ExchangeCurrencyCurrentForMerchantRequest.Size(m)
}
func (m *ExchangeCurrencyCurrentForMerchantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeCurrencyCurrentForMerchantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeCurrencyCurrentForMerchantRequest proto.InternalMessageInfo

func (m *ExchangeCurrencyCurrentForMerchantRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *ExchangeCurrencyCurrentForMerchantRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *ExchangeCurrencyCurrentForMerchantRequest) GetRateType() string {
	if m != nil {
		return m.RateType
	}
	return ""
}

func (m *ExchangeCurrencyCurrentForMerchantRequest) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ExchangeCurrencyCurrentForMerchantRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

type ExchangeCurrencyByDateCommonRequest struct {
	//@inject_tag: validate:"required,alpha,len=3"
	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty" validate:"required,alpha,len=3"`
	//@inject_tag: validate:"required,alpha,len=3"
	To string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty" validate:"required,alpha,len=3"`
	//@inject_tag: validate:"required,oneof=oxr paysuper centralbanks stock cardpay"
	RateType string `protobuf:"bytes,3,opt,name=rate_type,json=rateType,proto3" json:"rate_type,omitempty" validate:"required,oneof=oxr paysuper centralbanks stock cardpay"`
	// @inject_tag: validate:"numeric,gte=0"
	Amount float64 `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty" validate:"numeric,gte=0"`
	//@inject_tag: validate:"required"
	Datetime             *timestamp.Timestamp `protobuf:"bytes,5,opt,name=datetime,proto3" json:"datetime,omitempty" validate:"required"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *ExchangeCurrencyByDateCommonRequest) Reset()         { *m = ExchangeCurrencyByDateCommonRequest{} }
func (m *ExchangeCurrencyByDateCommonRequest) String() string { return proto.CompactTextString(m) }
func (*ExchangeCurrencyByDateCommonRequest) ProtoMessage()    {}
func (*ExchangeCurrencyByDateCommonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1988b70e90d5a630, []int{15}
}

func (m *ExchangeCurrencyByDateCommonRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeCurrencyByDateCommonRequest.Unmarshal(m, b)
}
func (m *ExchangeCurrencyByDateCommonRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeCurrencyByDateCommonRequest.Marshal(b, m, deterministic)
}
func (m *ExchangeCurrencyByDateCommonRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeCurrencyByDateCommonRequest.Merge(m, src)
}
func (m *ExchangeCurrencyByDateCommonRequest) XXX_Size() int {
	return xxx_messageInfo_ExchangeCurrencyByDateCommonRequest.Size(m)
}
func (m *ExchangeCurrencyByDateCommonRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeCurrencyByDateCommonRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeCurrencyByDateCommonRequest proto.InternalMessageInfo

func (m *ExchangeCurrencyByDateCommonRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *ExchangeCurrencyByDateCommonRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *ExchangeCurrencyByDateCommonRequest) GetRateType() string {
	if m != nil {
		return m.RateType
	}
	return ""
}

func (m *ExchangeCurrencyByDateCommonRequest) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ExchangeCurrencyByDateCommonRequest) GetDatetime() *timestamp.Timestamp {
	if m != nil {
		return m.Datetime
	}
	return nil
}

type ExchangeCurrencyByDateForMerchantRequest struct {
	//@inject_tag: validate:"required,alpha,len=3"
	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty" validate:"required,alpha,len=3"`
	//@inject_tag: validate:"required,alpha,len=3"
	To string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty" validate:"required,alpha,len=3"`
	//@inject_tag: validate:"required,oneof=oxr paysuper centralbanks stock cardpay"
	RateType string `protobuf:"bytes,3,opt,name=rate_type,json=rateType,proto3" json:"rate_type,omitempty" validate:"required,oneof=oxr paysuper centralbanks stock cardpay"`
	// @inject_tag: validate:"numeric,gte=0"
	Amount float64 `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty" validate:"numeric,gte=0"`
	//@inject_tag: validate:"omitempty,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,5,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty" validate:"omitempty,hexadecimal,len=24"`
	//@inject_tag: validate:"required"
	Datetime             *timestamp.Timestamp `protobuf:"bytes,6,opt,name=datetime,proto3" json:"datetime,omitempty" validate:"required"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *ExchangeCurrencyByDateForMerchantRequest) Reset() {
	*m = ExchangeCurrencyByDateForMerchantRequest{}
}
func (m *ExchangeCurrencyByDateForMerchantRequest) String() string { return proto.CompactTextString(m) }
func (*ExchangeCurrencyByDateForMerchantRequest) ProtoMessage()    {}
func (*ExchangeCurrencyByDateForMerchantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1988b70e90d5a630, []int{16}
}

func (m *ExchangeCurrencyByDateForMerchantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeCurrencyByDateForMerchantRequest.Unmarshal(m, b)
}
func (m *ExchangeCurrencyByDateForMerchantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeCurrencyByDateForMerchantRequest.Marshal(b, m, deterministic)
}
func (m *ExchangeCurrencyByDateForMerchantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeCurrencyByDateForMerchantRequest.Merge(m, src)
}
func (m *ExchangeCurrencyByDateForMerchantRequest) XXX_Size() int {
	return xxx_messageInfo_ExchangeCurrencyByDateForMerchantRequest.Size(m)
}
func (m *ExchangeCurrencyByDateForMerchantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeCurrencyByDateForMerchantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeCurrencyByDateForMerchantRequest proto.InternalMessageInfo

func (m *ExchangeCurrencyByDateForMerchantRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *ExchangeCurrencyByDateForMerchantRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *ExchangeCurrencyByDateForMerchantRequest) GetRateType() string {
	if m != nil {
		return m.RateType
	}
	return ""
}

func (m *ExchangeCurrencyByDateForMerchantRequest) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ExchangeCurrencyByDateForMerchantRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *ExchangeCurrencyByDateForMerchantRequest) GetDatetime() *timestamp.Timestamp {
	if m != nil {
		return m.Datetime
	}
	return nil
}

type ExchangeCurrencyResponse struct {
	// @inject_tag: validate:"numeric,gte=0"
	ExchangedAmount float64 `protobuf:"fixed64,1,opt,name=exchanged_amount,json=exchangedAmount,proto3" json:"exchanged_amount,omitempty" validate:"numeric,gte=0"`
	//@inject_tag: validate:"required,numeric,gt=0" json:"rate" bson:"exchange_rate"
	ExchangeRate float64 `protobuf:"fixed64,2,opt,name=exchange_rate,json=exchangeRate,proto3" json:"rate" validate:"required,numeric,gt=0" bson:"exchange_rate"`
	// @inject_tag: validate:"omitempty,numeric,gte=-100,lte=100" json:"correction"
	Correction float64 `protobuf:"fixed64,3,opt,name=correction,proto3" json:"correction" validate:"omitempty,numeric,gte=-100,lte=100"`
	//@inject_tag: validate:"required,numeric,gt=0" json:"original_rate"
	OriginalRate         float64  `protobuf:"fixed64,4,opt,name=original_rate,json=originalRate,proto3" json:"original_rate" validate:"required,numeric,gt=0"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *ExchangeCurrencyResponse) Reset()         { *m = ExchangeCurrencyResponse{} }
func (m *ExchangeCurrencyResponse) String() string { return proto.CompactTextString(m) }
func (*ExchangeCurrencyResponse) ProtoMessage()    {}
func (*ExchangeCurrencyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1988b70e90d5a630, []int{17}
}

func (m *ExchangeCurrencyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeCurrencyResponse.Unmarshal(m, b)
}
func (m *ExchangeCurrencyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeCurrencyResponse.Marshal(b, m, deterministic)
}
func (m *ExchangeCurrencyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeCurrencyResponse.Merge(m, src)
}
func (m *ExchangeCurrencyResponse) XXX_Size() int {
	return xxx_messageInfo_ExchangeCurrencyResponse.Size(m)
}
func (m *ExchangeCurrencyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeCurrencyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeCurrencyResponse proto.InternalMessageInfo

func (m *ExchangeCurrencyResponse) GetExchangedAmount() float64 {
	if m != nil {
		return m.ExchangedAmount
	}
	return 0
}

func (m *ExchangeCurrencyResponse) GetExchangeRate() float64 {
	if m != nil {
		return m.ExchangeRate
	}
	return 0
}

func (m *ExchangeCurrencyResponse) GetCorrection() float64 {
	if m != nil {
		return m.Correction
	}
	return 0
}

func (m *ExchangeCurrencyResponse) GetOriginalRate() float64 {
	if m != nil {
		return m.OriginalRate
	}
	return 0
}

type CurrenciesList struct {
	Currencies           []string `protobuf:"bytes,1,rep,name=currencies,proto3" json:"currencies,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *CurrenciesList) Reset()         { *m = CurrenciesList{} }
func (m *CurrenciesList) String() string { return proto.CompactTextString(m) }
func (*CurrenciesList) ProtoMessage()    {}
func (*CurrenciesList) Descriptor() ([]byte, []int) {
	return fileDescriptor_1988b70e90d5a630, []int{18}
}

func (m *CurrenciesList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurrenciesList.Unmarshal(m, b)
}
func (m *CurrenciesList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurrenciesList.Marshal(b, m, deterministic)
}
func (m *CurrenciesList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrenciesList.Merge(m, src)
}
func (m *CurrenciesList) XXX_Size() int {
	return xxx_messageInfo_CurrenciesList.Size(m)
}
func (m *CurrenciesList) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrenciesList.DiscardUnknown(m)
}

var xxx_messageInfo_CurrenciesList proto.InternalMessageInfo

func (m *CurrenciesList) GetCurrencies() []string {
	if m != nil {
		return m.Currencies
	}
	return nil
}

func init() {
	proto.RegisterType((*GetRateCurrentCommonRequest)(nil), "currencies.GetRateCurrentCommonRequest")
	proto.RegisterType((*GetRateByDateCommonRequest)(nil), "currencies.GetRateByDateCommonRequest")
	proto.RegisterType((*GetRateCurrentForMerchantRequest)(nil), "currencies.GetRateCurrentForMerchantRequest")
	proto.RegisterType((*GetRateByDateForMerchantRequest)(nil), "currencies.GetRateByDateForMerchantRequest")
	proto.RegisterType((*RateData)(nil), "currencies.RateData")
	proto.RegisterType((*CardpayRate)(nil), "currencies.CardpayRate")
	proto.RegisterType((*EmptyResponse)(nil), "currencies.EmptyResponse")
	proto.RegisterType((*EmptyRequest)(nil), "currencies.EmptyRequest")
	proto.RegisterType((*CorrectionCorridor)(nil), "currencies.CorrectionCorridor")
	proto.RegisterType((*CorrectionRule)(nil), "currencies.CorrectionRule")
	proto.RegisterMapType((map[string]float64)(nil), "currencies.CorrectionRule.PairCorrectionEntry")
	proto.RegisterType((*CommonCorrectionRule)(nil), "currencies.CommonCorrectionRule")
	proto.RegisterMapType((map[string]float64)(nil), "currencies.CommonCorrectionRule.PairCorrectionEntry")
	proto.RegisterType((*CommonCorrectionRuleRequest)(nil), "currencies.CommonCorrectionRuleRequest")
	proto.RegisterType((*MerchantCorrectionRuleRequest)(nil), "currencies.MerchantCorrectionRuleRequest")
	proto.RegisterType((*ExchangeCurrencyCurrentCommonRequest)(nil), "currencies.ExchangeCurrencyCurrentCommonRequest")
	proto.RegisterType((*ExchangeCurrencyCurrentForMerchantRequest)(nil), "currencies.ExchangeCurrencyCurrentForMerchantRequest")
	proto.RegisterType((*ExchangeCurrencyByDateCommonRequest)(nil), "currencies.ExchangeCurrencyByDateCommonRequest")
	proto.RegisterType((*ExchangeCurrencyByDateForMerchantRequest)(nil), "currencies.ExchangeCurrencyByDateForMerchantRequest")
	proto.RegisterType((*ExchangeCurrencyResponse)(nil), "currencies.ExchangeCurrencyResponse")
	proto.RegisterType((*CurrenciesList)(nil), "currencies.CurrenciesList")
}

func init() { proto.RegisterFile("currencies.proto", fileDescriptor_1988b70e90d5a630) }

var fileDescriptor_1988b70e90d5a630 = []byte{
	// 1049 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x57, 0x41, 0x73, 0xdb, 0x44,
	0x14, 0xf6, 0xca, 0x8d, 0x27, 0x79, 0x49, 0x1d, 0xb3, 0xf5, 0x14, 0xd7, 0xc1, 0x8d, 0x51, 0x3b,
	0x34, 0xa1, 0x8c, 0xd3, 0x09, 0x85, 0x81, 0xde, 0x8c, 0x1b, 0x3c, 0x30, 0x65, 0x26, 0x28, 0x85,
	0x72, 0x68, 0xf1, 0x6c, 0xa5, 0xad, 0xab, 0xc1, 0xf2, 0x8a, 0xd5, 0x2a, 0xa0, 0x13, 0x30, 0xf0,
	0x17, 0xf8, 0x09, 0x1c, 0x19, 0x38, 0x71, 0xe1, 0x37, 0xf0, 0x0f, 0x38, 0xf1, 0x4b, 0x98, 0x5d,
	0x4b, 0xb6, 0x24, 0x4b, 0x72, 0x4c, 0xec, 0x19, 0x6e, 0xbb, 0x6f, 0x77, 0xbf, 0xf7, 0x7d, 0x6f,
	0x57, 0xef, 0x3d, 0x41, 0xcd, 0xf4, 0x39, 0xa7, 0x63, 0xd3, 0xa6, 0x5e, 0xc7, 0xe5, 0x4c, 0x30,
	0x0c, 0x33, 0x4b, 0x73, 0x7f, 0xc8, 0xd8, 0x70, 0x44, 0x8f, 0xd4, 0xca, 0x73, 0xff, 0xc5, 0x91,
	0xb0, 0x1d, 0xea, 0x09, 0xe2, 0xb8, 0x93, 0xcd, 0xfa, 0x97, 0xb0, 0xd7, 0xa7, 0xc2, 0x20, 0x82,
	0xf6, 0xd4, 0x29, 0xd1, 0x63, 0x8e, 0xc3, 0xc6, 0x06, 0xfd, 0xda, 0xa7, 0x9e, 0xc0, 0x18, 0xae,
	0xbc, 0xe0, 0xcc, 0x69, 0xa0, 0x36, 0x3a, 0xd8, 0x32, 0xd4, 0x18, 0x57, 0x41, 0x13, 0xac, 0xa1,
	0x29, 0x8b, 0x26, 0x18, 0xde, 0x83, 0x2d, 0x4e, 0x04, 0x1d, 0x88, 0xc0, 0xa5, 0x8d, 0xb2, 0x32,
	0x6f, 0x4a, 0xc3, 0xe3, 0xc0, 0xa5, 0xfa, 0xcf, 0x08, 0x9a, 0xa1, 0x83, 0x0f, 0x82, 0x87, 0xd2,
	0xcd, 0x4a, 0xf1, 0xf1, 0xbb, 0xb0, 0x69, 0x11, 0x41, 0xa5, 0xac, 0xc6, 0x95, 0x36, 0x3a, 0xd8,
	0x3e, 0x6e, 0x76, 0x26, 0x9a, 0x3b, 0x91, 0xe6, 0xce, 0xe3, 0x48, 0xb3, 0x31, 0xdd, 0xab, 0xff,
	0x84, 0xa0, 0x9d, 0x14, 0xfe, 0x21, 0xe3, 0x9f, 0x50, 0x6e, 0xbe, 0x24, 0x63, 0xb1, 0x32, 0x76,
	0xfb, 0xb0, 0xed, 0x84, 0x98, 0x03, 0xdb, 0x52, 0x04, 0xb7, 0x0c, 0x88, 0x4c, 0x1f, 0x59, 0xfa,
	0x9f, 0x08, 0xf6, 0x13, 0xe1, 0x59, 0x07, 0x8b, 0xff, 0x18, 0xa3, 0x34, 0xfb, 0x8d, 0x39, 0xf6,
	0xbf, 0x22, 0xd8, 0x94, 0xd4, 0x1f, 0x12, 0x41, 0x24, 0x25, 0xdb, 0x0a, 0x49, 0x6a, 0xb6, 0x85,
	0xdf, 0x07, 0x30, 0x39, 0x25, 0x82, 0x5a, 0x03, 0x22, 0x14, 0xd5, 0x62, 0xbf, 0x5b, 0xe1, 0xee,
	0xae, 0x52, 0xec, 0x12, 0x9b, 0x87, 0x42, 0xd4, 0x58, 0xda, 0xa4, 0x20, 0x25, 0x00, 0x19, 0x6a,
	0x8c, 0xaf, 0x43, 0xc5, 0x63, 0x3e, 0x37, 0x69, 0xc8, 0x2d, 0x9c, 0x49, 0xfb, 0x39, 0x1b, 0xf9,
	0x0e, 0x6d, 0x54, 0xd4, 0xee, 0x70, 0xa6, 0xff, 0x8e, 0x60, 0xbb, 0x47, 0xb8, 0xe5, 0x92, 0x40,
	0xd2, 0x4e, 0x51, 0x44, 0x4b, 0x52, 0x54, 0x97, 0xa2, 0xcd, 0x5d, 0x4a, 0x79, 0x7a, 0x29, 0xab,
	0xa0, 0xbc, 0x0b, 0x57, 0x4f, 0x1c, 0x57, 0x04, 0x06, 0xf5, 0x5c, 0x36, 0xf6, 0xa8, 0x5e, 0x85,
	0x9d, 0xd0, 0xa0, 0x5e, 0x87, 0xfe, 0x26, 0xe0, 0x1e, 0xe3, 0x9c, 0x9a, 0xc2, 0x66, 0x63, 0x39,
	0xb2, 0x2d, 0xc6, 0x71, 0x1d, 0x36, 0xce, 0xc9, 0xc8, 0xa7, 0x4a, 0x14, 0x32, 0x26, 0x13, 0xfd,
	0x1f, 0x0d, 0xaa, 0xb3, 0xcd, 0x86, 0x3f, 0xa2, 0x73, 0xb7, 0x96, 0x78, 0x48, 0x5a, 0xea, 0x21,
	0xdd, 0x85, 0x57, 0x4c, 0xf5, 0xf9, 0x0e, 0xcc, 0x29, 0x8a, 0xd2, 0x8b, 0x8c, 0xda, 0x64, 0x61,
	0x86, 0x8e, 0x9f, 0xc0, 0xae, 0xbc, 0xb8, 0xf8, 0xd6, 0x2b, 0xed, 0xf2, 0xc1, 0xf6, 0x71, 0xa7,
	0x13, 0x4b, 0x59, 0x49, 0x3a, 0x9d, 0x53, 0x62, 0xf3, 0x99, 0xe9, 0x64, 0x2c, 0x78, 0x60, 0x54,
	0xdd, 0x84, 0x31, 0x75, 0x6b, 0x1b, 0xcb, 0xdc, 0x5a, 0xea, 0x45, 0x57, 0xd2, 0x2f, 0xba, 0xd9,
	0x85, 0x6b, 0x19, 0x14, 0x70, 0x0d, 0xca, 0x5f, 0xd1, 0x20, 0x0c, 0x93, 0x1c, 0xce, 0x02, 0xac,
	0xc5, 0x02, 0xfc, 0x40, 0x7b, 0x0f, 0xe9, 0x7f, 0x69, 0x50, 0xef, 0xa5, 0x82, 0xb1, 0xe6, 0x50,
	0x3f, 0xcb, 0x0b, 0xf5, 0xfd, 0x64, 0xa8, 0xe7, 0x49, 0xad, 0x39, 0xe0, 0xab, 0x88, 0xe7, 0x03,
	0xd8, 0xcb, 0x62, 0x1e, 0x65, 0xc7, 0x44, 0x14, 0x51, 0xaa, 0xfa, 0x3c, 0x83, 0x56, 0x94, 0x4d,
	0x97, 0x3f, 0x9d, 0x7e, 0x2d, 0xda, 0x5c, 0xfe, 0xfb, 0x0e, 0x6e, 0x9f, 0x7c, 0x2b, 0x27, 0xc3,
	0xb0, 0x88, 0x98, 0xc1, 0x5a, 0xaa, 0xa8, 0xcc, 0x0e, 0xc4, 0x61, 0xfe, 0x58, 0x84, 0xb9, 0x24,
	0x9c, 0xe9, 0xbf, 0x20, 0x38, 0xcc, 0x61, 0xb0, 0x8e, 0x42, 0x92, 0x43, 0x63, 0x71, 0xa1, 0xf8,
	0x03, 0xc1, 0xad, 0x34, 0xcf, 0xb5, 0xb4, 0x03, 0x79, 0x0c, 0xe3, 0x25, 0x70, 0x63, 0x89, 0x36,
	0xe1, 0x6f, 0x04, 0x07, 0xd9, 0xc4, 0xff, 0x4f, 0xf1, 0x4d, 0xc8, 0xab, 0x2c, 0x21, 0xef, 0x37,
	0x04, 0x8d, 0xb4, 0xbc, 0xa8, 0xd2, 0xe0, 0x43, 0xa8, 0xd1, 0x70, 0xcd, 0x1a, 0x84, 0xbc, 0x26,
	0xe5, 0x64, 0x77, 0x6a, 0xef, 0x4e, 0x08, 0xde, 0x82, 0xab, 0x91, 0x69, 0xa0, 0x4a, 0xde, 0xe4,
	0x2b, 0xde, 0x89, 0x8c, 0xaa, 0xda, 0xde, 0x04, 0x98, 0xcb, 0x65, 0x31, 0x8b, 0x04, 0x61, 0xdc,
	0x1e, 0xda, 0x63, 0x32, 0x1a, 0xc4, 0xea, 0xe6, 0x4e, 0x64, 0x94, 0x20, 0xfa, 0x3d, 0xa8, 0xf6,
	0xa6, 0x29, 0xed, 0x91, 0xed, 0x09, 0x05, 0x3b, 0xb5, 0x34, 0x50, 0xbb, 0x2c, 0x63, 0x33, 0xb3,
	0x1c, 0x7f, 0x5f, 0x85, 0x7a, 0x38, 0x0d, 0x24, 0xac, 0x77, 0x46, 0xf9, 0xb9, 0x6d, 0x52, 0xfc,
	0x04, 0xea, 0x59, 0xad, 0x2f, 0xbe, 0x13, 0x4f, 0x9a, 0x05, 0xcd, 0x71, 0xb3, 0x1e, 0xdf, 0x18,
	0xf5, 0x41, 0x7a, 0x09, 0x7f, 0x06, 0xd7, 0x32, 0x5a, 0x5e, 0xfc, 0x46, 0x06, 0x6e, 0xc6, 0x47,
	0x90, 0x0b, 0x4b, 0xe0, 0x46, 0x6e, 0xc7, 0x8a, 0xdf, 0xca, 0x27, 0x3d, 0xff, 0x52, 0x73, 0x5d,
	0x0c, 0xa0, 0x91, 0xd7, 0x8d, 0xe2, 0xbb, 0xb9, 0xf4, 0x97, 0x70, 0x10, 0x40, 0xab, 0x30, 0x63,
	0xe2, 0x7b, 0xf1, 0x83, 0x17, 0x49, 0xae, 0xcd, 0xdb, 0x45, 0x27, 0xa6, 0x6d, 0x53, 0x09, 0xff,
	0x88, 0x40, 0x5f, 0x9c, 0x2b, 0xf1, 0x3b, 0x17, 0x20, 0x90, 0x21, 0xf8, 0xa2, 0x2c, 0xbe, 0x81,
	0xd7, 0x8a, 0x12, 0x21, 0x3e, 0x2a, 0xc2, 0xc9, 0x7a, 0x2d, 0x17, 0x75, 0xfc, 0x03, 0x82, 0xd7,
	0x17, 0x66, 0x32, 0x7c, 0x7f, 0xb1, 0xfb, 0x4b, 0x88, 0xb7, 0xd4, 0xcf, 0x66, 0xc8, 0x5f, 0x29,
	0x49, 0x34, 0x48, 0x77, 0x16, 0x75, 0x2b, 0x91, 0xbf, 0x66, 0x7e, 0x07, 0xa9, 0x97, 0xf0, 0x4b,
	0x68, 0xf5, 0xa9, 0x98, 0x72, 0x9c, 0xf7, 0x73, 0x18, 0x3f, 0x5e, 0xd8, 0x1f, 0x2c, 0xf0, 0xf4,
	0x14, 0xf6, 0xba, 0x96, 0x95, 0xab, 0xa7, 0xbd, 0x48, 0x4f, 0xf3, 0x46, 0x22, 0x70, 0x89, 0x3e,
	0xbf, 0x84, 0xbf, 0x80, 0x56, 0xd7, 0xb2, 0x0a, 0x74, 0x14, 0x90, 0x2b, 0x46, 0x7e, 0x0a, 0xad,
	0x33, 0x2a, 0x4e, 0x49, 0xe0, 0xf9, 0x2e, 0xe5, 0x19, 0xbf, 0x0f, 0x37, 0xb3, 0x91, 0xa3, 0xf5,
	0x62, 0xf4, 0x53, 0xb8, 0xde, 0xa7, 0xe2, 0xcc, 0x77, 0x5d, 0xc6, 0x05, 0xb5, 0x66, 0xe9, 0x1a,
	0x37, 0x32, 0x8e, 0x65, 0xc5, 0x39, 0x91, 0xe0, 0xf5, 0x12, 0xfe, 0x14, 0x5e, 0x95, 0x88, 0x54,
	0x88, 0x11, 0x75, 0x64, 0x02, 0xb8, 0x3c, 0xe4, 0x23, 0xc0, 0x7d, 0x2a, 0x4e, 0xb9, 0x6d, 0xd2,
	0x15, 0xa0, 0x7d, 0x0c, 0xb5, 0x3e, 0x15, 0x9f, 0x13, 0xb1, 0x32, 0xb1, 0x5d, 0xd3, 0x94, 0x95,
	0xd5, 0x1e, 0x0f, 0x2f, 0x0f, 0xf9, 0xbc, 0xa2, 0x9a, 0x80, 0xb7, 0xff, 0x0d, 0x00, 0x00, 0xff,
	0xff, 0x3a, 0xe2, 0x8f, 0xa3, 0x2c, 0x12, 0x00, 0x00,
}
